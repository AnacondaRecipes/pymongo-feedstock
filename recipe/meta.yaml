{% set name = "pymongo" %}
{% set version = "4.13.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/mongodb/mongo-python-driver/archive/{{ version }}.tar.gz
  sha256: 06371a91fc56f17c6c6a699778c930aa92acb293b0f76ae4398263cb8e56f0c0

build:
  number: 0
  skip: true  # [py<39]
  script: {{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation

requirements:
  build:
    - {{ compiler('c') }}
  host:
    - python
    - pip
    - hatchling >1.24
    - hatch-requirements-txt >=0.4.1
  run:
    - python
    - dnspython >=1.16.0,<3.0.0
  run_constrained:
    - pymongo-auth-aws >=1.1.0,<2.0.0
    - pymongocrypt >=1.13.0,<2.0.0
    - winkerberos >=0.5.0 # [win]
    - pyopenssl >=17.2.0
    - requests <3.0.0
    - cryptography >=2.5
    - service_identity >=18.1.0

{% set tests_to_ignore = "" %}
# It is now a ConfigurationError to not have pymongo_auth_aws
{% set tests_to_ignore = tests_to_ignore + " --ignore=test/auth_aws/test_auth_aws.py" %}
# We don't have the test/performance/data files
{% set tests_to_ignore = tests_to_ignore + " --ignore=test/performance/perf_test.py" %}
{% set tests_to_ignore = tests_to_ignore + " --ignore=test/performance/async_perf_test.py" %}
# We don't have a mongodb instance
{% set tests_to_ignore = tests_to_ignore + " --ignore=test/auth_oidc/test_auth_oidc.py" %}
# We don't have an atlas instance (mongodb in the cloud)
{% set tests_to_ignore = tests_to_ignore + " --ignore=test/atlas/test_connection.py" %}
# We don't have an OCSP instance (Online Certificate Status Protocol)
{% set tests_to_ignore = tests_to_ignore + " --ignore=test/ocsp/test_ocsp.py" %}
# cls.username = os.environ["DB_USER"] -> KeyError: 'DB_USER'
{% set tests_to_ignore = tests_to_ignore + " --ignore=test/asynchronous/test_index_management.py" %}
{% set tests_to_ignore = tests_to_ignore + " --ignore=test/test_index_management.py" %}
# https://github.com/pytest-dev/pytest-asyncio/issues/810
# assert inspect.iscoroutinefunction(func), f"{func!r} is not an async function"
{% set tests_to_ignore = tests_to_ignore + " --ignore=test/asynchronous/test_encryption.py" %}

{% set tests_to_skip = "" %}
# The test is expecting to be running under  kubernetes?
{% set tests_to_skip = tests_to_skip + "test_container_metadata" %}
# A less than obvious AssertionError
{% set tests_to_skip = tests_to_skip + " or test_metadata" %}
# AssertionError (got nothing)
{% set tests_to_skip = tests_to_skip + " or test_initial_ismaster" %}  # [win-64 or (osx and x86)]
# AssertionError: False is not true : client context must be connected to data lake when DATA_LAKE is set.
{% set tests_to_skip = tests_to_skip + " or test_connected_to_data_lake" %}
# OSError: [Errno 99] error while attempting to bind on address ('::1', 9999, 0, 0): cannot assign requested address
{% set tests_to_skip = tests_to_skip + " or test_heartbeat_start_ordering" %}  # [linux]

test:
  source_files:
    - test
  imports:
    - bson
    - gridfs
    - pymongo
  requires:
    - pip
    - pytest >=8.2
    - mockupdb
    - pytest-asyncio >=0.24.0
  commands:
    - pip check
    - pytest -v test {{ tests_to_ignore }} -k "not ({{ tests_to_skip }})"
    - python -c "from importlib.metadata import version; assert(version('{{ name }}')=='{{ version }}')"

about:
  home: https://www.mongodb.org
  license: Apache-2.0
  license_file: LICENSE
  license_family: Apache
  summary: Python driver for MongoDB http://www.mongodb.org
  description: |
    The PyMongo distribution contains tools for interacting with MongoDB 
    database from Python. The bson package is an implementation of the 
    BSON format for Python. The pymongo package is a native Python driver 
    for MongoDB. The gridfs package is a gridfs implementation on top of pymongo.
  dev_url: https://github.com/mongodb/mongo-python-driver
  doc_url: https://www.mongodb.com/docs/languages/python/pymongo-driver/current/

extra:
  recipe-maintainers:
    - licode
    - jakirkham
    - tacaswell
    - CJ-Wright
